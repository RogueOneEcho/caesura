name: On Push
on:
  push:
env:
  CARGO_TERM_COLOR: always
jobs:
  on-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
    - id: cache-samples
      uses: actions/cache@v4
      with:
       path: samples/content
       key: cache-samples
    - if: steps.cache-samples.outputs.cache-hit != 'true'
      run: ./samples/download-sample
    - run: sudo apt-get update
    - run: sudo apt-get install flac lame sox imagemagick --yes
    - run: cargo install imdl
    - run: cargo build --release
    - run: cargo test --release --no-fail-fast
      env:
        API_KEY: ${{ secrets.API_KEY }}
        SOURCE: ${{ secrets.SOURCE }}
    - run: cargo check --quiet --all-targets --message-format short
      continue-on-error: true
    - run: cargo clippy --quiet --all-targets --message-format short
      continue-on-error: true
    - run: cargo fmt --quiet --check
      continue-on-error: true
    - id: release
      env:
        GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      run: ${{ secrets.RELEASE_SCRIPT }}
    - run: echo "${{ steps.release.outputs.version}}"
    - run: cat "release-notes.md"
    - name: gh release create
      if: ${{ steps.release.outputs.version != '' && ! contains(steps.release.outputs.version, '-') }}
      env:
        GH_TOKEN: ${{ github.token }}
      run: >
        gh release create
        "v${{ steps.release.outputs.version }}"
        --title "v${{ steps.release.outputs.version }}"
        --notes-file release-notes.md
        --target ${{ github.ref_name }}
    - name: gh release create --prerelease
      if: ${{ steps.release.outputs.version != '' && contains(steps.release.outputs.version, '-') }}
      env:
        GH_TOKEN: ${{ github.token }}
      run: >
        gh release create
        "v${{ steps.release.outputs.version }}"
        --title "v${{ steps.release.outputs.version }}"
        --notes-file release-notes.md
        --target ${{ github.ref_name }}
        --prerelease
    - run: cargo install cargo-edit
      if: ${{ steps.release.outputs.version != ''}}
    - run: cargo set-version ${{ steps.release.outputs.version }}
      if: ${{ steps.release.outputs.version != ''}}
    - name: gh release upload
      run: >
        gh release upload
        "v${{ steps.release.outputs.version }}"
        "target/release/caesura"
        --clobber
        --repo "${{ github.repository }}"
      env:
        GH_TOKEN: ${{ github.token }}
      if: ${{ steps.release.outputs.version != ''}}
    - run: cargo publish --allow-dirty
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      if: ${{ steps.release.outputs.version != ''}}
