[package]
name = "caesura"
edition = "2021"
build = "build.rs"
authors = ["DevYukine <devyukine@gmx.de>", "RogueOneEcho"]
description = "An all-in-one command line tool to **transcode FLAC** audio files and **upload to gazelle** based indexers/trackers. "
repository = "https://github.com/RogueOneEcho/caesura"
license = "AGPL-3.0-only"
include = [
    "src/**/*",
    "tests/**/*",
    "build.rs",
    "Cargo.lock",
    "Cargo.toml",
    "LICENSE.HISTORIC.md",
    "LICENSE.md",
    "README.md"
]
version = "0.0.0"
publish = true

[dependencies]
bytes = "^1.8"
chrono = "^0.4"
clap = { version = "^4.5", features = ["derive"] }
claxon = "^0.4"
colored = "^2.1"
flat_db = "0.1.0"
futures = "^0.3"
gazelle_api = "^0.3"
html-escape = "^0.2"
humantime = "^2.1"
indicatif = "^0.17"
lofty = "^0.21"
log = { version = "^0.4", features = ["std"] }
more-di = { version = "^3.1", features = ["async", "builder"] }
num_cpus = "^1.16"
regex = "^1"
reqwest = { version = "^0.12", features = ["rustls-tls", "json", "multipart", "stream"], default-features = false }
rogue_logging = "^0.2"
serde = { version = "^1.0", features = ["derive"] }
serde_json = "^1"
serde_yaml = "^0.9"
tokio = { version = "^1", features = ["full"] }

[build-dependencies]
built = "^0.7"

[lints.clippy]
pedantic = { level = "warn", priority = -1 }
#restriction = { level = "warn", priority = -2 }

absolute_paths = "warn"
arithmetic_side_effects = "allow"
as_conversions = "warn"
cast_possible_truncation = "warn"
clone_on_ref_ptr = "allow"
enum_glob_use = "allow"
expect_used = "allow"
exhaustive_enums = "allow"
exhaustive_structs = "allow"
get_first = "warn"
if_not_else = "warn"
if_then_some_else_none = "warn"
implicit_return = "allow"
indexing_slicing = "warn"
integer_division = "warn"
just_underscores_and_digits = "allow"
match_same_arms = "warn"
missing_docs_in_private_items = "allow"
missing_errors_doc = "allow"
missing_inline_in_public_items = "allow"
missing_panics_doc = "allow"
mod_module_files = "allow"
module_inception = "allow"
module_name_repetitions = "allow"
needless_pass_by_value = "allow"
new_without_default = "allow"
non_ascii_literal = "allow"
panic = "warn"
pattern_type_mismatch = "allow"
pub_use = "allow"
question_mark_used = "allow"
separated_literal_suffix = "allow"
shadow_reuse = "allow"
shadow_same = "allow"
shadow_unrelated = "allow"
single_call_fn = "allow"
std_instead_of_alloc = "allow"
std_instead_of_core = "allow"
str_to_string = "warn"
string_add = "allow"
tests_outside_test_module = "allow"
unneeded_wildcard_pattern = "warn"
unseparated_literal_suffix = "warn"
unused_self = "warn"
unwrap_used = "warn"
wildcard_enum_match_arm = "allow"
wildcard_imports = "allow"
wrong_self_convention = "allow"
# TODO COULD re-consider the following allows:
result_large_err = "allow"

# TODO SHOULD investigate solution to await_holding_lock
await_holding_lock = "allow"
